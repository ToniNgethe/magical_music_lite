plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.toni.margicalmusic'
    compileSdk 32

    defaultConfig {
        applicationId "com.toni.margicalmusic"
        minSdk 21
        targetSdk 32
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.0-rc02'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation Dependencies.ktxCore
    implementation Dependencies.lifecycleRuntime
    implementation Dependencies.activityCompose
    implementation Dependencies.composeUi
    implementation Dependencies.composeToolingPreview
    implementation Dependencies.composeMaterial
    debugImplementation Dependencies.composeTooling

    // compose
    implementation Dependencies.composeViewModel
    implementation Dependencies.composeNavigation

    // ui
    implementation Dependencies.accompanist
    implementation Dependencies.accompanistPermission
    implementation Dependencies.koil
    implementation Dependencies.androidYoutubePlayer

    //Dagger - Hilt
    implementation Dependencies.hilt
    kapt Dependencies.hiltCompiler
    implementation Dependencies.hiltNavigationCompose

    // tools
    implementation Dependencies.timber

    // retrofit
    implementation Dependencies.retrofit
    implementation Dependencies.retrofitConverterMoshi
    implementation Dependencies.loggingInterceptor
    implementation Dependencies.retrofitCoroutineAdapter
    testImplementation Dependencies.mockWebserver

    implementation project(path: ':core-database')
    implementation project(path: ':core-network')
}

// test
dependencies {
    testImplementation Dependencies.jUnit
    testImplementation Dependencies.googleTruth
    testImplementation Dependencies.mockk

    androidTestImplementation Dependencies.googleTruth
    androidTestImplementation Dependencies.androidxJunit
    androidTestImplementation Dependencies.expressoCore
    androidTestImplementation Dependencies.composeUiTestJunit
}

// Coroutines & Coroutine Lifecycle Scopes
dependencies {
    implementation Dependencies.viewmodelLifecycle
    implementation Dependencies.lifecycleRuntimeKtx
    implementation Dependencies.coroutinesCore
    implementation Dependencies.coroutinesAndroid

    testImplementation Dependencies.coroutinesTest
}

// data store
dependencies {
    implementation Dependencies.dataStore
}

dependencies {
    implementation Dependencies.gson
}

configurations.all {
    resolutionStrategy {
        force "com.squareup.okhttp3:okhttp:4.9.3"
    }
}