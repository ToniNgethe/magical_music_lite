plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.toni.margicalmusic'
    compileSdk 33

    defaultConfig {
        applicationId "com.toni.margicalmusic"
        minSdk 21
        targetSdk 33
        versionCode 5
        versionName "1.0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.COMPOSE_COMPILER
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.compose.ui
    implementation libs.androidx.compose.ui.tooling.preview
    implementation libs.androidx.compose.material
    debugImplementation libs.androidx.compose.ui.tooling
    implementation libs.androidx.dataStore.core

    // compose
    implementation libs.androidx.lifecycle.viewModelCompose
    implementation libs.androidx.navigation.compose

    // ui
    implementation libs.accompanist.systemuicontroller
    implementation libs.accompanist.permissions
    implementation libs.coil.kt
    implementation libs.android.youtubePlayer

    //Dagger - Hilt
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

    // tools
    implementation libs.timber

    // retrofit
    implementation libs.retrofit.core
    implementation libs.retrofit.loggingInterceptor

    implementation project(path: ':core-database')
    implementation project(path: ':core-network')
    implementation project(path: ':core-media')
    implementation project(path: ':resources')
    implementation project(path: ':features:feature_onboarding')
    implementation project(path: ':features:feature-settings')
}

// test
dependencies {
    testImplementation libs.junit4
    testImplementation libs.google.truth
    testImplementation libs.mockk

    androidTestImplementation(libs.kotlinx.coroutines.test)
    androidTestImplementation( libs.google.truth)
    androidTestImplementation libs.androidx.junit
}

// Coroutines & Coroutine Lifecycle Scopes
dependencies {
    implementation libs.androidx.lifecycle.viewModelKtx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    testImplementation libs.kotlinx.coroutines.test
}

dependencies {
    implementation project(path: ':features:feature-selected-song')
    implementation project(path: ':features:feature-song')
    implementation project(path: ':core-navigation')
    implementation project(path: ':features:feature-artists')
    implementation project(path: ':core-utils')
    implementation project(path: ':core-media')
    androidTestImplementation project(path: ':core-utils')
    implementation(project(":core-design"))
}
